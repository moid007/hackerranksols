HackerEarth Zauba Hiring Challenge
shaikhamoid777@gmail.com
00 : 37 : 12 left
Help
End Test
3 QuestionsTotal Marks: 300.0
2 Programming Questions
1.
Lexical Sorting Reloaded
+ 100.0
2.
Divisor Queries.
+ 100.0
1 Approximate Question
3.
Matrix sum
+ 100.0
Question2Max. Marks 100.00
Divisor Queries.
Consider the Function:

F
(
X
)
F(X) = Number of Divisors of Integer
′
X
′
′X′

You have been given an array consisting of
N
N integers and
M
M queries .There can be only 1 type of query i.e :

q
u
e
r
y
(
l
,
r
)
query(l,r) : You need to find product of all number in the range from
l
l to
r
r inclusive and then output the result of function
F
(
X
)
F(X) mod
10
9
+
7
109+7 for that product.

Input Format:

The first line contains 2 integers
N
N and
M
M denoting the number of array elements and the number of queries The next line contains
N
N numbers denoting the elements of the array .

Each of the next M lines contains 2 integers
l
l and
r
r for whom the query needs to be answered.

Output Format:

For each query you need to print a single number denoting the answer to that query mod
10
9
+
7
109+7

Constraints:

1
≤
N
≤
5
∗
10
5
1≤N≤5∗105

1
≤
M
≤
4
∗
10
5
1≤M≤4∗105

1
≤
l
≤
r
≤
N
1≤l≤r≤N

1
≤
a
[
i
]
≤
10
1≤a[i]≤10

Note: Each element of the array shall not have a value greater than 10.

Sample Input
6 2
1 2 3 4 5 6
1 2
1 6
Sample Output
2
30
Explanation
For the 1st query, the product is 2 , F(2)=2. For the second query , product=720 , F(720)=30.

Time Limit: 1.0 sec(s) for each input file
Memory Limit: 256 MB
Source Limit: 1024 KB
Marking Scheme: Marks are awarded if any testcase passes
Allowed Languages: C, C++, Clojure, C#, D, Erlang, F#, Go, Groovy, Haskell, Java, Java 8, JavaScript(Rhino), JavaScript(Node.js), Lisp, Lisp (SBCL), Lua, Objective-C, OCaml, Octave, Pascal, Perl, PHP, Python, Python 3, R(RScript), Racket, Ruby, Rust, Scala, Scala 2.11.8, Swift, Visual Basic
New SubmissionAll Submissions
Save


1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
def primefactors(x):
    factorlist=[]
    loop=2
    while loop<=x:
        if x%loop==0:
            x/=loop
            factorlist.append(loop)
        else:
            loop+=1
    return factorlist
def factors(s):
    xx=primefactors(s)
    facindex = [xx.count(x) for x in set(xx)]
    numfac = 1
    for q in facindex:
        numfac *= q+1
    return numfac
def printsolutions():
    l, r = map(int, input().split())
    prod = 1
    for i in range(l-1, r):
        prod *= nums[i]
    print(factors(prod))
n, q = map(int, input().split())
nums = list(map(int, input().split(' ')))
while q > 0:
    printsolutions()
    q -= 1
20:8
 Press Ctrl-space for autocomplete suggestions.
 Provide custom input
COMPILE & TEST SUBMIT
Submission ID: 7092634 / a minute ago
RESULT:  Evaluating...
Score
0


Time (sec)
0.0


Memory (KiB)
0


Language
Python 3

Next Question

